name: CI/CD for innakitchen

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/innakitchen
  DOCKER_PLATFORMS: linux/amd64

jobs:
  test:
    name: E2E (Cypress)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image (dev)
        run: docker build -t innakitchen:dev .

      - name: Run web container
        run: docker run -d --rm --name innakitchen-web -p 8080:80 innakitchen:dev

      - name: Wait for web
        run: |
          for i in {1..30}; do
            curl -fsS http://localhost:8080 && break
            sleep 1
          done

      - name: Cypress run
        uses: cypress-io/github-action@v6
        env:
          CYPRESS_baseUrl: http://localhost:8080
        with:
          browser: chrome
          config: video=false

  build_and_push:
    name: Build & Push GHCR
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_READ_TOKEN || github.token }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: ${{ env.DOCKER_PLATFORMS }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    name: Deploy to Mac mini
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: SSH into Mac mini and deploy
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          script_stop: true
          script: |
            set -e
            cd ${{ secrets.COMPOSE_PROJECT_DIR }}
            # Ensure REGISTRY_OWNER is set for compose variable substitution
            export REGISTRY_OWNER="${{ github.repository_owner }}"
            echo "Using REGISTRY_OWNER=${REGISTRY_OWNER}"
            docker login ghcr.io -u "${{ github.repository_owner }}" -p "${{ secrets.GHCR_READ_TOKEN }}"
            docker compose -f docker-compose.prod.yml pull
            docker compose -f docker-compose.prod.yml up -d
            docker image prune -f
